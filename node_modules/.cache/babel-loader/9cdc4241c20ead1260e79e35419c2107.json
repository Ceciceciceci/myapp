{"ast":null,"code":"var _jsxFileName = \"/Users/cecitran/Desktop/websites/myapp/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport LoadingScreen from './components/LoadingScreen';\nimport NewHome from './components/NewHome';\nimport Header from './components/Header';\nimport About from './components/Homepage/About';\nimport Projects from './components/Homepage/Projects';\nimport CaseStudy from './components/Homepage/CaseStudy';\nimport Contact from './components/Homepage/Contact';\nimport Resume from './components/Homepage/Resume';\nimport Todo from './components/Todo';\nimport { ThemeProvider } from 'styled-components';\nimport { LightTheme, DarkTheme } from './styles/theme';\nimport { GlobalStyles } from './styles/global';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ScrollTo from '../src/components/ScrollTo';\nexport default function App() {\n  //toggle between themes\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setTheme('dark');\n    } else {\n      setTheme('light');\n    }\n  };\n\n  const navigation = [{\n    id: 1,\n    key: 'about',\n    link: '/about'\n  }, {\n    id: 2,\n    key: 'project',\n    link: '/project'\n  }, {\n    id: 3,\n    key: 'contact',\n    link: '/contact'\n  }, {\n    id: 4,\n    key: 'resume',\n    link: '/resume'\n  }];\n  const artnavigation = [{\n    id: 1,\n    key: 'about',\n    link: '/about'\n  }, {\n    id: 2,\n    key: 'fanart',\n    link: '/fanart'\n  }, {\n    id: 3,\n    key: 'originalart',\n    link: '/originalart'\n  }, {\n    id: 4,\n    key: 'contact',\n    link: '/contact'\n  }];\n  const [activeState, setActiveState] = useState(false);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(ScrollTo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme === 'light' ? LightTheme : DarkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    theme: theme,\n    setTheme: setTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    theme: theme,\n    setTheme: setTheme,\n    navigation: navigation,\n    toggleTheme: toggleTheme,\n    activeState: activeState,\n    setActiveState: setActiveState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(NewHome, Object.assign({}, props, {\n      theme: theme,\n      setTheme: setTheme,\n      isAuthed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    render: props => /*#__PURE__*/React.createElement(About, Object.assign({}, props, {\n      theme: theme,\n      setTheme: setTheme,\n      isAuthed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/project\",\n    render: props => /*#__PURE__*/React.createElement(Projects, Object.assign({}, props, {\n      theme: theme,\n      setTheme: setTheme,\n      isAuthed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/contact\",\n    render: props => /*#__PURE__*/React.createElement(Contact, Object.assign({}, props, {\n      theme: theme,\n      setTheme: setTheme,\n      isAuthed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/resume\",\n    render: props => /*#__PURE__*/React.createElement(Resume, Object.assign({}, props, {\n      theme: theme,\n      setTheme: setTheme,\n      isAuthed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/cecitran/Desktop/websites/myapp/src/App.js"],"names":["React","useState","useEffect","LoadingScreen","NewHome","Header","About","Projects","CaseStudy","Contact","Resume","Todo","ThemeProvider","LightTheme","DarkTheme","GlobalStyles","BrowserRouter","Router","Switch","Route","ScrollTo","App","theme","setTheme","toggleTheme","navigation","id","key","link","artnavigation","activeState","setActiveState","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport LoadingScreen from './components/LoadingScreen';\nimport NewHome from './components/NewHome';\nimport Header from './components/Header';\nimport About from './components/Homepage/About';\nimport Projects from './components/Homepage/Projects';\nimport CaseStudy from './components/Homepage/CaseStudy';\nimport Contact from './components/Homepage/Contact';\nimport Resume from './components/Homepage/Resume';\nimport Todo from './components/Todo';\nimport { ThemeProvider } from 'styled-components';\nimport { LightTheme, DarkTheme } from './styles/theme'\nimport { GlobalStyles } from './styles/global';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ScrollTo from '../src/components/ScrollTo';\n\nexport default function App () {\n\n  //toggle between themes\n  const [theme, setTheme] = useState('light')\n  const toggleTheme = () => {\n      if(theme === 'light'){\n          setTheme('dark');\n      } else {\n          setTheme('light');\n      }\n  }\n\n  const navigation = [\n    {\n      id: 1,\n      key: 'about',\n      link: '/about'\n    },\n    {\n      id: 2,\n      key: 'project',\n      link: '/project'\n    },\n    {\n      id: 3,\n      key: 'contact',\n      link: '/contact'\n    },\n    {\n      id: 4,\n      key: 'resume',\n      link: '/resume'\n    }\n  ]\n\n  const artnavigation = [\n    {\n      id: 1,\n      key: 'about',\n      link: '/about'\n    },\n    {\n      id: 2,\n      key: 'fanart',\n      link: '/fanart'\n    },\n    {\n      id: 3,\n      key: 'originalart',\n      link: '/originalart'\n    },\n    {\n      id: 4,\n      key: 'contact',\n      link: '/contact'\n    }\n  ]\n\n  const [activeState, setActiveState] = useState(false)\n\n  return (\n     <Router>\n        <ScrollTo />\n        <ThemeProvider theme={(theme === 'light') ? LightTheme : DarkTheme}>\n          <>\n            <GlobalStyles />\n              <div className=\"App\" theme={theme} setTheme={setTheme}>\n                <Header theme={theme} \n                        setTheme={setTheme} \n                        navigation={navigation} \n                        toggleTheme={toggleTheme}\n                        activeState={activeState}\n                        setActiveState={setActiveState}\n                />\n                <Switch>\n                  <Route exact path='/' render={(props) => (\n                    <NewHome {...props} theme={theme} setTheme={setTheme} isAuthed={true} />\n                  )} />\n                  <Route exact path='/about' render={(props) => (\n                    <About {...props} theme={theme} setTheme={setTheme} isAuthed={true} />\n                  )} />\n                  <Route exact path='/project' render={(props) => (\n                    <Projects {...props} theme={theme} setTheme={setTheme} isAuthed={true} />\n                  )} />\n                  <Route exact path='/contact' render={(props) => (\n                    <Contact {...props} theme={theme} setTheme={setTheme} isAuthed={true} />\n                  )} />\n                  <Route exact path='/resume' render={(props) => (\n                    <Resume {...props} theme={theme} setTheme={setTheme} isAuthed={true} />\n                  )} />\n                </Switch>\n              </div>\n          </>\n        </ThemeProvider>\n      </Router>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}