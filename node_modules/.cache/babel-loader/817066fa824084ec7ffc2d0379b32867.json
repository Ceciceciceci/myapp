{"ast":null,"code":"var _jsxFileName = \"/Users/cecitran/Desktop/website/myapp/src/components/Toggle.js\";\nimport React from 'react';\nimport { func, string } from 'prop-types';\nimport styled from 'styled-components';\nimport { ReactComponent as Sun } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/svgs/sun.svg\";\nimport { ReactComponent as Moon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../images/svgs/moon.svg\"; //--\n\nconst ToggleContainer = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  background: ${({\n  theme\n}) => theme.pageBackground};\n  width: 7rem;\n  height: 4rem;\n  margin: 0 auto;\n  border-radius: 30px;\n  border: 5px solid ${({\n  theme\n}) => theme.toggleBorder};\n  font-size: 0.5rem;\n  padding: 0.5rem;\n  overflow: hidden;\n  cursor: pointer;\n  outline: none;\n  svg {\n    width: 2.5rem;\n    height: auto;\n    transition: all 0.3s linear;\n  }\n  svg:first-child{\n    transform: ${({\n  lightTheme\n}) => lightTheme ? 'translateY(0)' : 'translateY(100px)'};\n  }\n  svg:nth-child(2){\n    transform: ${({\n  lightTheme\n}) => lightTheme ? 'translateY(-100px)' : 'translateY(0)'};\n  }\n`;\n\nconst Toggle = ({\n  theme,\n  toggleTheme\n}) => {\n  const isLight = theme === 'light';\n  return /*#__PURE__*/React.createElement(ToggleContainer, {\n    lightTheme: isLight,\n    onClick: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sun, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Moon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }));\n};\n\nToggle.propTypes = {\n  theme: string.isRequired,\n  toggleTheme: func.isRequired\n};\nexport default Toggle;","map":{"version":3,"sources":["/Users/cecitran/Desktop/website/myapp/src/components/Toggle.js"],"names":["React","func","string","styled","ToggleContainer","button","theme","pageBackground","toggleBorder","lightTheme","Toggle","toggleTheme","isLight","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,YAA7B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;sGAIA;;AAEA,MAAMC,eAAe,GAAGD,MAAM,CAACE,MAAO;;;;gBAItB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,cAAe;;;;;sBAK9B,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,YAAa;;;;;;;;;;;;iBAYvC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoBA,UAAU,GAAG,eAAH,GAAqB,mBAAoB;;;iBAGvE,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAoBA,UAAU,GAAG,oBAAH,GAA0B,eAAgB;;CAxBzF;;AA4BA,MAAMC,MAAM,GAAG,CAAC;AAAEJ,EAAAA,KAAF;AAASK,EAAAA;AAAT,CAAD,KAA4B;AACvC,QAAMC,OAAO,GAAGN,KAAK,KAAK,OAA1B;AACA,sBACI,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAEM,OAA7B;AAAsC,IAAA,OAAO,EAAED,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CATD;;AAWAD,MAAM,CAACG,SAAP,GAAmB;AACfP,EAAAA,KAAK,EAAEJ,MAAM,CAACY,UADC;AAEfH,EAAAA,WAAW,EAAEV,IAAI,CAACa;AAFH,CAAnB;AAKA,eAAeJ,MAAf","sourcesContent":["import React from 'react';\nimport { func, string } from 'prop-types';\n\nimport styled from 'styled-components';\n\nimport {ReactComponent as Sun} from '../images/svgs/sun.svg';\nimport {ReactComponent as Moon} from '../images/svgs/moon.svg';\n//--\n\nconst ToggleContainer = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  background: ${({ theme }) => theme.pageBackground};\n  width: 7rem;\n  height: 4rem;\n  margin: 0 auto;\n  border-radius: 30px;\n  border: 5px solid ${({ theme }) => theme.toggleBorder};\n  font-size: 0.5rem;\n  padding: 0.5rem;\n  overflow: hidden;\n  cursor: pointer;\n  outline: none;\n  svg {\n    width: 2.5rem;\n    height: auto;\n    transition: all 0.3s linear;\n  }\n  svg:first-child{\n    transform: ${({ lightTheme }) => lightTheme ? 'translateY(0)' : 'translateY(100px)'};\n  }\n  svg:nth-child(2){\n    transform: ${({ lightTheme }) => lightTheme ? 'translateY(-100px)' : 'translateY(0)'};\n  }\n`;\n\nconst Toggle = ({ theme, toggleTheme }) => {\n    const isLight = theme === 'light';\n    return (\n        <ToggleContainer lightTheme={isLight} onClick={toggleTheme} >\n            <Sun />\n            <Moon />\n        </ToggleContainer>\n\n    )\n}\n\nToggle.propTypes = {\n    theme: string.isRequired,\n    toggleTheme: func.isRequired\n}\n\nexport default Toggle;"]},"metadata":{},"sourceType":"module"}