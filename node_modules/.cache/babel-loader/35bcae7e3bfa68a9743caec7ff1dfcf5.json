{"ast":null,"code":"var _jsxFileName = \"/Users/cecitran/Desktop/website/myapp/src/components/Todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\nexport default function Todo() {\n  const [todos, setTodos] = React.useState([{\n    text: \"Learn about React\",\n    isCompleted: true\n  }, {\n    text: \"Meet friend for lunch\",\n    isCompleted: false\n  }, {\n    text: \"Build really cool todo app\",\n    isCompleted: false\n  }]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setTodos('');\n  };\n\n  const addTodo = text => {\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, todos.map((todo, index) => /*#__PURE__*/React.createElement(TodoItem, {\n    key: index,\n    index: index,\n    todo: todo,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/cecitran/Desktop/website/myapp/src/components/Todo.js"],"names":["React","useState","useEffect","TodoItem","TodoForm","Todo","todos","setTodos","text","isCompleted","handleSubmit","e","preventDefault","value","addTodo","newTodos","removeTodo","index","splice","completeTodo","map","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,SAASC,IAAT,GAAe;AAE5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACC,QAAN,CAAe,CACvC;AACEO,IAAAA,IAAI,EAAE,mBADR;AAEEC,IAAAA,WAAW,EAAE;AAFf,GADuC,EAKvC;AACED,IAAAA,IAAI,EAAE,uBADR;AAEEC,IAAAA,WAAW,EAAE;AAFf,GALuC,EASvC;AACED,IAAAA,IAAI,EAAE,4BADR;AAEEC,IAAAA,WAAW,EAAE;AAFf,GATuC,CAAf,CAA1B;;AAeA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACC,KAAL,EAAY;AACZC,IAAAA,OAAO,CAACD,KAAD,CAAP;AACAN,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GALD;;AAOA,QAAMO,OAAO,GAAIN,IAAD,IAAS;AACvB,UAAMO,QAAQ,GAAG,CAAC,GAAGT,KAAJ,EAAW;AAACE,MAAAA;AAAD,KAAX,CAAjB;AACAD,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,UAAMF,QAAQ,GAAG,CAAC,GAAGT,KAAJ,CAAjB;AACAS,IAAAA,QAAQ,CAACG,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB;AACAV,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD,GAJD;;AAMA,QAAMI,YAAY,GAAIF,KAAD,IAAW;AAC9B,UAAMF,QAAQ,GAAG,CAAC,GAAGT,KAAJ,CAAjB;AACAS,IAAAA,QAAQ,CAACE,KAAD,CAAR,CAAgBR,WAAhB,GAA6B,IAA7B;AACAF,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACc,GAAN,CAAU,CAACC,IAAD,EAAOJ,KAAP,kBACT,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,KAAK,EAAEA,KAFT;AAGE,IAAA,IAAI,EAAEI,IAHR;AAIE,IAAA,YAAY,EAAEF,YAJhB;AAKE,IAAA,UAAU,EAAEH,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,eAUE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEF,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\n\nexport default function Todo(){\n\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: true\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false\n    },\n    {\n      text: \"Build really cool todo app\",\n      isCompleted: false\n    }\n  ]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setTodos('');\n  }\n\n  const addTodo = (text) =>{\n    const newTodos = [...todos, {text}];\n    setTodos(newTodos)\n  }\n\n  const removeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  }\n\n  const completeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted =true;\n    setTodos(newTodos);\n  }\n\n  return (\n    <div className=\"todo-list\">\n      {todos.map((todo, index) => (\n        <TodoItem\n          key={index}\n          index={index}\n          todo={todo}\n          completeTodo={completeTodo}\n          removeTodo={removeTodo}\n        />\n      ))}\n      <TodoForm addTodo={addTodo} />\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}